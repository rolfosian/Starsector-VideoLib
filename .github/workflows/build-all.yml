name: Build FFmpeg static and JNI

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build-all.yml
  pull_request:
    paths:
      - .github/workflows/build-all.yml
      - ffmpeg-jni/src/ffmpegjni.c

# permissions:
#   contents: write

jobs:
  # build-linux:
  #   name: Linux
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - name: Set up JDK 17
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: temurin
  #         java-version: '17'

  #     - name: Install build dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y --no-install-recommends \
  #         build-essential zlib1g-dev unzip

  #     - name: Build JNI bridge (libffmpegjni.so)
  #       env:
  #         JAVA_HOME: ${{ env.JAVA_HOME }}
  #       run: |
  #         unzip -o ${{ github.workspace }}/ffmpeg-static/linux/ffmpeg-static-linux.zip -d ${{ github.workspace }}/ffmpeg-static/linux
  #         chmod +x ./ffmpeg-jni/src/buildlinux.sh
  #         ./ffmpeg-jni/src/buildlinux.sh

      # - name: Commit and push built binary (Linux)
      #   if: ${{ github.event_name == 'push' }}
      #   uses: stefanzweifel/git-auto-commit-action@v5
      #   with:
      #     commit_message: "chore(ci): update Linux ffmpegjni.so"
      #     file_pattern: ffmpeg-jni/bin/linux/ffmpegjni.so
      #     branch: ${{ github.ref_name }}

  windows-static:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install MSYS2 manually
        shell: powershell
        run: |
          $msysInstaller = "https://repo.msys2.org/distrib/x86_64/msys2-x86_64-20250830.exe"
          $msysPath = "C:\MSYS2"
          Invoke-WebRequest $msysInstaller -OutFile "$env:TEMP\msys2.exe"
          Start-Process "$env:TEMP\msys2.exe" -ArgumentList "install","--root",$msysPath,"--confirm-command" -Wait
          echo "MSYS2 installed to $msysPath"

      - name: Update MSYS2 and install MinGW64 packages
        shell: powershell
        run: |
          C:\MSYS2\usr\bin\bash.exe -lc "pacman -Syuu --noconfirm"
          C:\MSYS2\usr\bin\bash.exe -lc "pacman -S --noconfirm base-devel git mingw-w64-x86_64-gcc mingw-w64-x86_64-pkg-config mingw-w64-x86_64-bzip2 mingw-w64-x86_64-libiconv mingw-w64-x86_64-zlib mingw-w64-x86_64-crt-git mingw-w64-x86_64-winpthreads-git mingw-w64-x86_64-openssl mingw-w64-x86_64-dav1d"

          $env:PATH = "C:\MSYS2\mingw64\bin;" + $env:PATH
          Write-Host "Updated PATH: $env:PATH"

      - name: Unzip FFmpeg static (Windows)
        shell: powershell
        run: |
          $zip = Join-Path $env:GITHUB_WORKSPACE 'ffmpeg-static\windows\ffmpeg-static-windows.zip'
          $dest = Join-Path $env:GITHUB_WORKSPACE 'ffmpeg-static\windows'
          if (Test-Path $zip) {
            Expand-Archive -Path $zip -DestinationPath $dest -Force
            Write-Host "Extracted: $zip"
          } else {
            throw "Zip not found: $zip"
          }

      - name: Build JNI bridge (ffmpegjni.dll)
        shell: powershell
        run: |
          Set-Location $env:GITHUB_WORKSPACE
          & powershell -ExecutionPolicy Bypass -File .\ffmpeg-jni\src\buildwindows.ps1

      # - name: Commit and push built binary (Windows)
      #   if: ${{ github.event_name == 'push' }}
      #   uses: stefanzweifel/git-auto-commit-action@v5
      #   with:
      #     commit_message: "chore(ci): update Windows ffmpegjni.dll"
      #     file_pattern: ffmpeg-jni/bin/windows/ffmpegjni.dll
      #     branch: ${{ github.ref_name }}
      