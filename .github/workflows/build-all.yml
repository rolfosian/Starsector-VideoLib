name: Build FFmpeg static and JNI

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build-all.yml
      - ffmpeg-jni/src/ffmpegjni.c
  pull_request:
    paths:
      - .github/workflows/build-all.yml
      - ffmpeg-jni/src/ffmpegjni.c

jobs:
  build-linux:
    name: Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            autoconf automake build-essential pkg-config yasm nasm make git \
            zlib1g-dev

      - name: Fetch FFmpeg source
        run: |
          git clone --depth=1 https://github.com/FFmpeg/FFmpeg.git ffmpeg-src

      - name: Build FFmpeg (static)
        working-directory: ffmpeg-src
        env:
          PREFIX: ${{ github.workspace }}/ffmpeg-static/linux
        run: |
          ./configure \
            --disable-everything --disable-doc --disable-programs --disable-debug \
            --disable-ffplay --disable-ffprobe \
            --enable-gpl --enable-static --disable-shared \
            --prefix="$PREFIX" \
            --enable-decoder=h264 --enable-decoder=hevc --enable-decoder=vp8 --enable-decoder=vp9 \
            --enable-decoder=mjpeg --enable-decoder=png --enable-decoder=webp --enable-decoder=gif \
            --enable-parser=h264 --enable-parser=hevc --enable-parser=vp8 --enable-parser=vp9 \
            --enable-parser=mjpeg --enable-parser=png --enable-parser=webp --enable-parser=gif \
            --enable-demuxer=matroska --enable-demuxer=mov --enable-demuxer=image2 --enable-demuxer=gif \
            --enable-protocol=file \
            --enable-pic --extra-cflags="-fPIC" --extra-cxxflags="-fPIC"
          make -j"$(nproc)"
          make install

      - name: Build JNI bridge (libffmpegjni.so)
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: |
          set -euo pipefail
          SRC=ffmpeg-jni/src/ffmpegjni.c
          OUT_DIR=ffmpeg-jni/bin/linux
          PREFIX=${{ github.workspace }}/ffmpeg-static/linux
          mkdir -p "$OUT_DIR"
          gcc -O2 -DNDEBUG -fPIC \
            -I"$PREFIX/include" -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/linux" \
            -o "$OUT_DIR/ffmpegjni.so" \
            -Wl,-Bsymbolic -shared -static-libgcc \
            "$SRC" \
            -L"$PREFIX/lib" \
            "$PREFIX/lib/libswscale.a" \
            "$PREFIX/lib/libavformat.a" \
            "$PREFIX/lib/libavcodec.a" \
            "$PREFIX/lib/libavutil.a" \
            "$PREFIX/lib/libswresample.a" \
            -lpthread -ldl -lm -lz

      - name: Upload artifacts (Linux)
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            ffmpeg-static/linux
            ffmpeg-jni/bin/linux/ffmpegjni.so

  build-macos:
    name: macOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Install build dependencies
        run: |
          brew update
          brew install nasm yasm pkg-config

      - name: Fetch FFmpeg source
        run: |
          git clone --depth=1 https://github.com/FFmpeg/FFmpeg.git ffmpeg-src

      - name: Build FFmpeg (static)
        working-directory: ffmpeg-src
        env:
          PREFIX: ${{ github.workspace }}/ffmpeg-static/mac
        run: |
          ./configure \
            --disable-everything --disable-doc --disable-programs --disable-debug \
            --disable-ffplay --disable-ffprobe \
            --enable-gpl --enable-static --disable-shared \
            --prefix="$PREFIX" \
            --enable-cross-compile --target-os=darwin --arch=x86_64 \
            --enable-decoder=h264 --enable-decoder=hevc --enable-decoder=vp8 --enable-decoder=vp9 \
            --enable-decoder=mjpeg --enable-decoder=png --enable-decoder=webp --enable-decoder=gif \
            --enable-parser=h264 --enable-parser=hevc --enable-parser=vp8 --enable-parser=vp9 \
            --enable-parser=mjpeg --enable-parser=png --enable-parser=webp --enable-parser=gif \
            --enable-demuxer=matroska --enable-demuxer=mov --enable-demuxer=image2 --enable-demuxer=gif \
            --enable-protocol=file \
            --enable-pic \
            --cc="clang" --cxx="clang++" \
            --extra-cflags="-fPIC -arch x86_64 -mmacosx-version-min=10.15" \
            --extra-cxxflags="-fPIC -arch x86_64 -mmacosx-version-min=10.15" \
            --extra-ldflags="-arch x86_64 -mmacosx-version-min=10.15"
          make -j"$(sysctl -n hw.ncpu)"
          make install

      - name: Build JNI bridge (libffmpegjni.dylib)
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: |
          set -euo pipefail
          SRC=ffmpeg-jni/src/ffmpegjni.c
          OUT_DIR=ffmpeg-jni/bin/mac
          PREFIX=${{ github.workspace }}/ffmpeg-static/mac
          mkdir -p "$OUT_DIR"
          clang -O2 -DNDEBUG -fPIC \
            -I"$PREFIX/include" -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/darwin" \
            -o "$OUT_DIR/ffmpegjni.dylib" \
            -dynamiclib -Wl,-undefined,error \
            -arch x86_64 -mmacosx-version-min=10.15 \
            "$SRC" \
            -L"$PREFIX/lib" \
            "$PREFIX/lib/libswscale.a" \
            "$PREFIX/lib/libavformat.a" \
            "$PREFIX/lib/libavcodec.a" \
            "$PREFIX/lib/libavutil.a" \
            "$PREFIX/lib/libswresample.a" \
            -lpthread -lm -lz -lbz2 -liconv \
            -framework CoreVideo \
            -framework VideoToolbox \
            -framework CoreMedia \
            -framework CoreFoundation

      - name: Upload artifacts (macOS)
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            ffmpeg-static/mac
            ffmpeg-jni/bin/mac/ffmpegjni.dylib

  build-windows:
    name: Windows
    runs-on: windows-latest
    env:
      PREFIX_WIN: ${{ github.workspace }}\ffmpeg-static\windows
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up MSYS2 with MinGW-w64
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            base-devel
            git
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-gcc-libs
            mingw-w64-x86_64-bzip2
            mingw-w64-x86_64-libiconv
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-crt-git
            mingw-w64-x86_64-winpthreads-git
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-expat
            mingw-w64-x86_64-make
            mingw-w64-x86_64-libtasn1
            mingw-w64-x86_64-nasm

      - name: Fetch FFmpeg source
        shell: msys2 {0}
        run: |
          mingw64
          git clone --depth=1 https://github.com/FFmpeg/FFmpeg.git ffmpeg-src

      - name: Build FFmpeg (static)
        shell: msys2 {0}
        run: |
          mingw64
          set -eo pipefail
          cd ffmpeg-src
          PREFIX=$(cygpath -u "$PREFIX_WIN")
          export CC=x86_64-w64-mingw32-gcc
          export CXX=x86_64-w64-mingw32-g++
          export AR=x86_64-w64-mingw32-ar
          export RANLIB=x86_64-w64-mingw32-ranlib
          mkdir -p "$PREFIX"

          ./configure \
            --target-os=mingw32 \
            --arch=x86_64 \
            --disable-everything \
            --disable-doc \
            --disable-programs \
            --disable-debug \
            --disable-ffplay \
            --disable-ffprobe \
            --enable-gpl \
            --enable-static \
            --disable-shared \
            --enable-decoder=h264,hevc,vp8,vp9,mjpeg,png,webp,gif \
            --enable-parser=h264,hevc,vp8,vp9,mjpeg,png,webp,gif \
            --enable-demuxer=matroska,mov,image2,gif \
            --enable-protocol=file \
            --enable-w32threads \
            --prefix="$PREFIX"

          mingw32-make -j$(nproc)
          mingw32-make install

      - name: Check FFmpeg install path
        shell: msys2 {0}
        run: |
          mingw64
          echo "PREFIX_WIN = $PREFIX_WIN"
          echo "Resolved PREFIX = $(cygpath -u "$PREFIX_WIN")"
          ls -R "$(cygpath -u "$PREFIX_WIN")"

      - name: Build JNI bridge (ffmpegjni.dll)
        shell: msys2 {0}
        env:
          JAVA_HOME_WIN: ${{ env.JAVA_HOME }}
        run: |
          mingw64
          set -eo pipefail
          PREFIX=$(cygpath -u "$PREFIX_WIN")
          JAVA_HOME=$(cygpath -u "$JAVA_HOME_WIN")
          OUT_DIR=$(cygpath -u "${{ github.workspace }}\ffmpeg-jni\bin\windows")
          mkdir -p "$OUT_DIR"
          gcc -O2 -DNDEBUG -DWIN32_LEAN_AND_MEAN -DUNICODE -D_UNICODE -fPIC \
            -I"$PREFIX/include" -I"$JAVA_HOME/include" -I"$JAVA_HOME/include/win32" \
            -o "$OUT_DIR/ffmpegjni.dll" \
            -shared -static-libgcc \
            "ffmpeg-jni/src/ffmpegjni.c" \
            -L"$PREFIX/lib" \
            "$PREFIX/lib/libswresample.a" \
            "$PREFIX/lib/libswscale.a" \
            "$PREFIX/lib/libavformat.a" \
            "$PREFIX/lib/libavcodec.a" \
            "$PREFIX/lib/libavutil.a" \
            -lws2_32 -lwinmm -lbcrypt -lcrypt32 -lncrypt \
            -lbz2 -lz -liconv \
            -lsecur32 -lole32 -luuid \
            -luser32 -lgdi32 -limm32 \
            -lssp

      - name: List build outputs
        run: |
          dir "${{ github.workspace }}\ffmpeg-static"
          dir "${{ github.workspace }}\ffmpeg-jni\bin\windows"
        shell: pwsh

      - name: Upload artifacts (Windows)
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            ${{ github.workspace }}\ffmpeg-static\windows
            ${{ github.workspace }}\ffmpeg-jni\bin\windows\ffmpegjni.dll