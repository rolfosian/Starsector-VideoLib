name: Build FFmpeg JNI DLL

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-windows:
    runs-on: windows-latest

    env:
      MSYS2_PATH: C:\msys64\usr\bin
      REPO_ROOT: ${{ github.workspace }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: |
            base
            bash
            bash-completion
            brotli
            bsdtar
            bzip2
            ca-certificates
            coreutils
            curl
            dash
            db
            file
            filesystem
            findutils
            gawk
            gcc-libs
            gdbm
            getent
            gettext
            gmp
            gnupg
            grep
            git
            gzip
            heimdal-libs
            inetutils
            info
            less
            libargp
            libasprintf
            libassuan
            libbz2
            libcurl
            libdb
            libedit
            libexpat
            libffi
            libgcrypt
            libgdbm
            libgettextpo
            libgnutls
            libgpg-error
            libhogweed
            libiconv
            libidn2
            libintl
            libksba
            liblz4
            liblzma
            libnettle
            libnghttp2
            libnpth
            libopenssl
            libp11-kit
            libpcre
            libpcre2_8
            libpsl
            libreadline
            libsqlite
            libssh2
            libtasn1
            libunistring
            libutil-linux
            libxcrypt
            libzstd
            mingw-w64-x86_64-binutils
            mingw-w64-x86_64-boost
            mingw-w64-x86_64-boost-libs
            mingw-w64-x86_64-bzip2
            mingw-w64-x86_64-crt-git
            mingw-w64-x86_64-expat
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-gcc-libs
            mingw-w64-x86_64-gdb
            mingw-w64-x86_64-gdb-multiarch
            mingw-w64-x86_64-gettext-runtime
            mingw-w64-x86_64-gmp
            mingw-w64-x86_64-headers-git
            mingw-w64-x86_64-icu
            mingw-w64-x86_64-isl
            mingw-w64-x86_64-libffi
            mingw-w64-x86_64-libiconv
            mingw-w64-x86_64-libmangle-git
            mingw-w64-x86_64-libsystre
            mingw-w64-x86_64-libtre-git
            mingw-w64-x86_64-libwinpthread-git
            mingw-w64-x86_64-make
            mingw-w64-x86_64-mpc
            mingw-w64-x86_64-mpdecimal
            mingw-w64-x86_64-mpfr
            mingw-w64-x86_64-nasm
            mingw-w64-x86_64-ncurses
            mingw-w64-x86_64-openssl
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-python
            mingw-w64-x86_64-readline
            mingw-w64-x86_64-sqlite3
            mingw-w64-x86_64-tcl
            mingw-w64-x86_64-termcap
            mingw-w64-x86_64-tk
            mingw-w64-x86_64-tools-git
            mingw-w64-x86_64-tzdata
            mingw-w64-x86_64-windows-default-manifest
            mingw-w64-x86_64-winpthreads-git
            mingw-w64-x86_64-winstorecompat-git
            mingw-w64-x86_64-xxhash
            mingw-w64-x86_64-xz
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-zstd
            mintty
            mpfr
            msys2-keyring
            msys2-launcher
            msys2-runtime
            nano
            make
            ncurses
            nettle
            openssl
            p11-kit
            perl
            pinentry
            pkgconf
            rebase
            sed
            tar
            time
            tzcode
            util-linux
            wget
            which
            xz
            yasm
            zlib
            zstd

      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
          architecture: x64

      - name: Fetch FFmpeg source
        shell: msys2 {0}
        run: git clone --depth=1 https://github.com/FFmpeg/FFmpeg.git ffmpeg-src

      - name: Build FFmpeg (static)
        shell: msys2 {0}
        working-directory: ffmpeg-src
        env:
          PREFIX_WIN: ${{ github.workspace }}\ffmpeg-static\windows
        run: |
          set -eo pipefail
          PREFIX=$(cygpath -u "$PREFIX_WIN")
          ./configure \
            --disable-everything --disable-doc --disable-programs --disable-debug \
            --disable-ffplay --disable-ffprobe \
            --enable-gpl --enable-static --disable-shared \
            --prefix="$PREFIX" \
            --enable-decoder=h264 --enable-decoder=hevc --enable-decoder=vp8 --enable-decoder=vp9 \
            --enable-decoder=mjpeg --enable-decoder=png --enable-decoder=webp --enable-decoder=gif \
            --enable-parser=h264 --enable-parser=hevc --enable-parser=vp8 --enable-parser=vp9 \
            --enable-parser=mjpeg --enable-parser=png --enable-parser=webp --enable-parser=gif \
            --enable-demuxer=matroska --enable-demuxer=mov --enable-demuxer=image2 --enable-demuxer=gif \
            --enable-protocol=file
          make -j$(nproc)
          make install

      - name: Build ffmpegjni.dll
        shell: msys2 {0}
        run: |
          set -e
          REPO_ROOT_WIN="${GITHUB_WORKSPACE}"
          REPO_ROOT=$(cygpath -u "$REPO_ROOT_WIN")
          FFMPEG_SDK_DIR="$REPO_ROOT/ffmpeg-static/windows"
          SRC_FILE="$REPO_ROOT/ffmpeg-jni/src/ffmpegjni.c"
          OUT_DIR="$REPO_ROOT/ffmpeg-jni/bin/windows"
          mkdir -p "$OUT_DIR"
          OUT_DLL="$OUT_DIR/ffmpegjni.dll"

          GCC="gcc"

          JAVA_HOME_UNIX=$(cygpath -u "$JAVA_HOME")
          INCLUDE_FLAGS="-I$FFMPEG_SDK_DIR/include -I$JAVA_HOME_UNIX/include -I$JAVA_HOME_UNIX/include/win32"
          LIB_FLAGS="-L$FFMPEG_SDK_DIR/lib \
            $FFMPEG_SDK_DIR/lib/libswresample.a \
            $FFMPEG_SDK_DIR/lib/libswscale.a \
            $FFMPEG_SDK_DIR/lib/libavformat.a \
            $FFMPEG_SDK_DIR/lib/libavcodec.a \
            $FFMPEG_SDK_DIR/lib/libavutil.a \
            -lws2_32 -lwinmm -lbcrypt -lcrypt32 -lbz2 -lz -lsecur32 -lole32 -luuid -lncrypt -liconv"
          CFLAGS="-O2 -DNDEBUG -DWIN32_LEAN_AND_MEAN -DUNICODE -D_UNICODE -fPIC"
          LDFLAGS="-shared -static-libgcc"

          echo "Compiling ffmpegjni.dll..."
          $GCC $CFLAGS $INCLUDE_FLAGS -o "$OUT_DLL" $LDFLAGS "$SRC_FILE" $LIB_FLAGS
          echo "Build succeeded: $OUT_DLL"
